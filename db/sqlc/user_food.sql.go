// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.2
// source: user_food.sql

package db

import (
	"context"
)

const createUserFood = `-- name: CreateUserFood :one
INSERT INTO user_food (
    user_id,
    food_id
) VALUES (
    $1, $2
)
RETURNING user_id, food_id
`

type CreateUserFoodParams struct {
	UserID int32 `json:"user_id"`
	FoodID int32 `json:"food_id"`
}

func (q *Queries) CreateUserFood(ctx context.Context, arg CreateUserFoodParams) (UserFood, error) {
	row := q.db.QueryRowContext(ctx, createUserFood, arg.UserID, arg.FoodID)
	var i UserFood
	err := row.Scan(&i.UserID, &i.FoodID)
	return i, err
}

const deleteUserFood = `-- name: DeleteUserFood :exec
DELETE FROM user_food
WHERE user_id = $1 AND food_id = $2
`

type DeleteUserFoodParams struct {
	UserID int32 `json:"user_id"`
	FoodID int32 `json:"food_id"`
}

func (q *Queries) DeleteUserFood(ctx context.Context, arg DeleteUserFoodParams) error {
	_, err := q.db.ExecContext(ctx, deleteUserFood, arg.UserID, arg.FoodID)
	return err
}
